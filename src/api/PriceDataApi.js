/**
 * iVolAPI
 * implied volatility and price data for selected ETFs and futures. Contact: info at volsurf.com
 *
 * OpenAPI spec version: 3.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import HTTPValidationError from '../model/HTTPValidationError';
import ModelObject from '../model/ModelObject';

/**
* PriceData service.
* @module api/PriceDataApi
* @version 3.0.3
*/
export default class PriceDataApi {

    /**
    * Constructs a new PriceDataApi. 
    * @alias module:api/PriceDataApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getContinuousEod operation.
     * @callback module:api/PriceDataApi~getContinuousEodCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Conti Eod
     * @param {Object} opts Optional parameters
     * @param {module:api/PriceDataApi~getContinuousEodCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    getContinuousEod(symbol, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'symbol': symbol,
        'ust': opts['ust'],
        'exchange': opts['exchange'],
        'nthcontract': opts['nthcontract'],
        'startdate': opts['startdate'],
        'enddate': opts['enddate'],
        'dminus': opts['dminus'],
        'order': opts['order']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelObject;

      return this.apiClient.callApi(
        '/prices/eod/conti', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getContinuousEodAsArray operation.
     * @callback module:api/PriceDataApi~getContinuousEodAsArrayCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Continuous Eod As Array
     * @param {Object} opts Optional parameters
     * @param {module:api/PriceDataApi~getContinuousEodAsArrayCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    getContinuousEodAsArray(symbol, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'symbol': symbol,
        'ust': opts['ust'],
        'exchange': opts['exchange'],
        'startdate': opts['startdate'],
        'enddate': opts['enddate'],
        'dminus': opts['dminus'],
        'order': opts['order']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelObject;

      return this.apiClient.callApi(
        '/prices/eod/conti/array', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getContinuousEodSpread operation.
     * @callback module:api/PriceDataApi~getContinuousEodSpreadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Continuous Eod Spread
     * @param {Object} opts Optional parameters
     * @param {module:api/PriceDataApi~getContinuousEodSpreadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    getContinuousEodSpread(symbol, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'symbol': symbol,
        'ust': opts['ust'],
        'exchange': opts['exchange'],
        'nthcontract1': opts['nthcontract1'],
        'nthcontract2': opts['nthcontract2'],
        'startdate': opts['startdate'],
        'enddate': opts['enddate'],
        'dminus': opts['dminus'],
        'order': opts['order']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelObject;

      return this.apiClient.callApi(
        '/prices/eod/conti/spread', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getIntradayPrices operation.
     * @callback module:api/PriceDataApi~getIntradayPricesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Intraday Prices
     * @param {Object} opts Optional parameters
     * @param {module:api/PriceDataApi~getIntradayPricesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    getIntradayPrices(symbol, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'symbol': symbol,
        'month': opts['month'],
        'year': opts['year'],
        'ust': opts['ust'],
        'exchange': opts['exchange'],
        'startdate': opts['startdate'],
        'enddate': opts['enddate'],
        'dminus': opts['dminus'],
        'interval': opts['interval'],
        'iunit': opts['iunit'],
        'order': opts['order']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelObject;

      return this.apiClient.callApi(
        '/prices/intraday', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getPvpIntraday operation.
     * @callback module:api/PriceDataApi~getPvpIntradayCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * price volume profile. histogram of intraday price data
     * price volume profile. histogram of intraday price data  - **symbol**: example: &#x27;SPY&#x27; or &#x27;spy&#x27; (case insensitive) - **month**: only for futures - one of [&#x27;F&#x27;, &#x27;G&#x27;, &#x27;H&#x27;, &#x27;J&#x27;, &#x27;K&#x27;, &#x27;M&#x27;, &#x27;N&#x27;, &#x27;Q&#x27;, &#x27;U&#x27;, &#x27;V&#x27;, &#x27;X&#x27;, &#x27;Z&#x27;] - **year**: only for futures - example: 19 - **ust**: underlying security type: [&#x27;fut&#x27;, &#x27;eqt&#x27;, &#x27;ind&#x27;, &#x27;fx&#x27;] - **exchange**: one of: [&#x27;usetf&#x27;, &#x27;cme&#x27;, &#x27;ice&#x27;, &#x27;eurex&#x27;] - **startdate**: format: yyyy-mm-dd - **enddate**: format: yyyy-mm-dd - **dminus**: indicate the number of days back from &#x60;enddate&#x60; - **buckets**: number of intervals in the histogram - **iunit**: one of [&#x27;minutes&#x27;, &#x27;hour, &#x27;day&#x27;, &#x27;week&#x27;, &#x27;month&#x27;] - **order**:  sorting order with respect to price interval
     * @param {Object} opts Optional parameters
     * @param {module:api/PriceDataApi~getPvpIntradayCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    getPvpIntraday(symbol, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'symbol': symbol,
        'month': opts['month'],
        'year': opts['year'],
        'ust': opts['ust'],
        'exchange': opts['exchange'],
        'startdate': opts['startdate'],
        'enddate': opts['enddate'],
        'dminus': opts['dminus'],
        'buckets': opts['buckets'],
        'iunit': opts['iunit'],
        'order': opts['order']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelObject;

      return this.apiClient.callApi(
        '/prices/intraday/pvp', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getRegularFuturesEod operation.
     * @callback module:api/PriceDataApi~getRegularFuturesEodCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Regular Futures Eod
     * end of day prices 
     * @param {Object} opts Optional parameters
     * @param {module:api/PriceDataApi~getRegularFuturesEodCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    getRegularFuturesEod(symbol, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'symbol': symbol,
        'month': opts['month'],
        'year': opts['year'],
        'ust': opts['ust'],
        'exchange': opts['exchange'],
        'startdate': opts['startdate'],
        'enddate': opts['enddate'],
        'dminus': opts['dminus'],
        'order': opts['order']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelObject;

      return this.apiClient.callApi(
        '/prices/eod', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
