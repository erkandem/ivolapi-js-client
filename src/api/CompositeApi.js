/**
 * iVolAPI
 * implied volatility and price data for selected ETFs and futures. Contact: info at volsurf.com
 *
 * OpenAPI spec version: 3.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import HTTPValidationError from '../model/HTTPValidationError';
import ModelObject from '../model/ModelObject';
import Query1 from '../model/Query1';
import Query2 from '../model/Query2';
import VolaSummary from '../model/VolaSummary';

/**
* Composite service.
* @module api/CompositeApi
* @version 3.0.3
*/
export default class CompositeApi {

    /**
    * Constructs a new CompositeApi. 
    * @alias module:api/CompositeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getIvolSummaryCme operation.
     * @callback module:api/CompositeApi~getIvolSummaryCmeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get min, max, std, average and weekly data points for symbols on CME
     * Returns descriptive statistics and some slices of data for for selected symbols traded at CME
     * @param {module:api/CompositeApi~getIvolSummaryCmeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    getIvolSummaryCme(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelObject;

      return this.apiClient.callApi(
        '/ivol/summary/cme', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getIvolSummaryEurex operation.
     * @callback module:api/CompositeApi~getIvolSummaryEurexCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/VolaSummary>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get min, max, std, average and weekly data points for symbols on EUREX
     * Returns descriptive statistics and some slices of data for selected symbols traded at EUREX
     * @param {module:api/CompositeApi~getIvolSummaryEurexCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/VolaSummary>}
     */
    getIvolSummaryEurex(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [VolaSummary];

      return this.apiClient.callApi(
        '/ivol/summary/eurex', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getIvolSummaryIce operation.
     * @callback module:api/CompositeApi~getIvolSummaryIceCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/VolaSummary>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get min, max, std, average and weekly data points for sybmols on ICE
     * Returns descriptive statistics and some slices of data for symbols traded at ICE
     * @param {module:api/CompositeApi~getIvolSummaryIceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/VolaSummary>}
     */
    getIvolSummaryIce(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [VolaSummary];

      return this.apiClient.callApi(
        '/ivol/summary/ice', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getIvolSummarySingle operation.
     * @callback module:api/CompositeApi~getIvolSummarySingleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VolaSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get min, max, std, average and weekly data points
     * Returns descriptive statistics and some slices of implied volatility data last, 1 week, 2 week, 3 week, 4 week, 5 week and 6 week ago  - **symbol**: example: &#x27;SPY&#x27; or &#x27;spy&#x27; (case insensitive) - **ust**: underlying security type: &#x27;eqt&#x27; e.g. - **exchange**: one of: &#x27;usetf&#x27;, e.g. - **startdate**: format: yyyy-mm-dd - **enddate**: format: yyyy-mm-dd - **dminus**: indicate the number of days back from &#x60;enddate&#x60; - **tte**: time &#x27;til expiry: 1m 3m 12m ... - **delta**: a single delta. d050 by default.
     * @param {Object} opts Optional parameters
     * @param {module:api/CompositeApi~getIvolSummarySingleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VolaSummary}
     */
    getIvolSummarySingle(symbol, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'symbol': symbol,
        'ust': opts['ust'],
        'exchange': opts['exchange'],
        'tte': opts['tte'],
        'startdate': opts['startdate'],
        'enddate': opts['enddate'],
        'dminus': opts['dminus'],
        'delta': opts['delta']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VolaSummary;

      return this.apiClient.callApi(
        '/ivol/summary/single', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getIvolSummaryUsetf operation.
     * @callback module:api/CompositeApi~getIvolSummaryUsetfCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/VolaSummary>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get min, max, std, average and weekly data points for US ETFs
     * Returns descriptive statistics and some slices of data for selected US ETFs
     * @param {module:api/CompositeApi~getIvolSummaryUsetfCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/VolaSummary>}
     */
    getIvolSummaryUsetf(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [VolaSummary];

      return this.apiClient.callApi(
        '/ivol/summary/usetf', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getRiskReversal operation.
     * @callback module:api/CompositeApi~getRiskReversalCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the risk reversal of fitted implied volatility data
     * Get the risk reversal of fitted implied volatility data for &#x60;symbol&#x60;.  Essentially the risk reversal is a measure of the volatility skew. supplied only &#x60;offset&#x60; will be parsed. Minimally supply &#x60;symbol&#x60;. The backend will try to resolve the dependent query parameters such as security type &#x60;ust&#x60; and &#x60;exchange&#x60; or set defaults.  Calculation:  &gt;rr &#x3D; σ(delta1) - σ(delta2)  Example:  &gt;delta1 &#x3D; 60 (otm put with 40 delta)  &gt;delta2 &#x3D; 40 (otm call with 40 delta)  &gt;rr &#x3D; σ(|Δ_put| &#x3D; 40) - σ(|Δ_call| &#x3D; 40)  For an average equities rr will be positive on average.  - **symbol**: example: &#x27;SPY&#x27; or &#x27;spy&#x27; (case insensitive) - **ust**: underlying security type: [&#x27;fut&#x27;, &#x27;eqt&#x27;, &#x27;ind&#x27;, &#x27;fx&#x27;] - **exchange**: one of: [&#x27;usetf&#x27;, &#x27;cme&#x27;, &#x27;ice&#x27;, &#x27;eurex&#x27;] - **tte**: time until expiry. 1m 3m 12m ... - **startdate**: format: yyyy-mm-dd - **enddate**: format: yyyy-mm-dd - **dminus**: indicate the number of days back from &#x60;enddate&#x60; - **delta1**: manually set the first delta leg - **delta2**: manually set the second delta leg - **order**:  sorting order with respect to date
     * @param {Object} opts Optional parameters
     * @param {module:api/CompositeApi~getRiskReversalCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    getRiskReversal(symbol, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'symbol': symbol,
        'ust': opts['ust'],
        'exchange': opts['exchange'],
        'tte': opts['tte'],
        'startdate': opts['startdate'],
        'enddate': opts['enddate'],
        'dminus': opts['dminus'],
        'delta1': opts['delta1'],
        'delta2': opts['delta2'],
        'order': opts['order']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelObject;

      return this.apiClient.callApi(
        '/ivol/risk-reversal', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the postDeltaData operation.
     * @callback module:api/CompositeApi~postDeltaDataCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Post Delta Data
     * @param {module:api/CompositeApi~postDeltaDataCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    postDeltaData(body, callback) {
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelObject;

      return this.apiClient.callApi(
        '/delta-contour', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the postTopOiAndVolume operation.
     * @callback module:api/CompositeApi~postTopOiAndVolumeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Post Top Oi And Volume
     * &#x27;Returns the open interest development of the top &#x60;n&#x60; strikes of an option chain
     * @param {module:api/CompositeApi~postTopOiAndVolumeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    postTopOiAndVolume(body, callback) {
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelObject;

      return this.apiClient.callApi(
        '/top-oi-and-volume', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
